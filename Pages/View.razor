@page "/view"
@inject NavigationManager Navigation
@using System
@using System.ComponentModel.DataAnnotations
@using System.Net.Http
@inject HttpClient Http
@using System.Net.Http.Json
@using Newtonsoft.Json

<h1>Photo Catalog</h1>

<div class="menu">
    <button @onclick="() => LoadData()">POSTS</button>
    <button @onclick="() => LoadData()">COMMENTS</button>
    <button @onclick="() => LoadData()">PHOTOS</button>
    <button @onclick="() => LoadData()">USERS</button>
</div>


<div class="photo-catalog">
    @foreach (var item in Data)
    {
        <div class="photo-item">
            @if (!string.IsNullOrEmpty(item.Title))
            {
                <h3>@item.Title</h3>
            }
            <img src="@item.Url" alt="@item.Title" />
            <p>@item.Description</p>
        </div>
    }
</div>

@code {
    private string ErrorMessage { get; set; }
    private List<Item> Data { get; set; } = new List<Item>();

    protected override async Task OnInitializedAsync()
    {
        await LoadData("photos");
    }

    private async Task LoadData(string action = "photos")
    {
        try
        {
            string apiUrl = GetApiUrl(action);
            Data = await Http.GetFromJsonAsync<List<Item>>(apiUrl);
        }
        catch (HttpRequestException ex)
        {
            ErrorMessage = $"Error: {ex.Message}";
        }
    }
    private string GetApiUrl(string action)
    {
        switch (action.ToLower())
        {
            case "posts":
                return "https://jsonplaceholder.typicode.com/posts";
            case "comments":
                return "https://jsonplaceholder.typicode.com/comments";
            case "photos":
                return "https://jsonplaceholder.typicode.com/photos";
            case "users":
                return "https://jsonplaceholder.typicode.com/users";
            default:
                throw new ArgumentException("Invalid action");
        }
    }

    public class Item
    {
        public int AlbumId { get; set; }
        public int Id { get; set; }
        public string Title { get; set; }
        public string Url { get; set; }
        public string ThumbnailUrl { get; set; }
        public string Description { get; set; }
    }
}
